{"title":"从零开始搭建Hexo+Auroar个人博客！","uid":"f70bf64eabbded8a2bd4b5fac72c7ba7","slug":"搭建hexo","date":"2022-11-25T10:53:51.000Z","updated":"2023-09-06T08:41:16.627Z","comments":true,"path":"api/articles/搭建hexo.json","keywords":null,"cover":"/medias/9.png","content":"<h2 id=\"1-下载git和node\"><a href=\"#1-下载git和node\" class=\"headerlink\" title=\"1.下载git和node\"></a>1.下载git和node</h2><p>搭建之前需要准备的软件：<br>Git：官网下载：<a href=\"https://git-scm.com/\">https://git-scm.com/</a><br>Node.js 官网下载：<a href=\"http://nodejs.cn/\">http://nodejs.cn/</a></p>\n<p>以及:注册一个github账号</p>\n<h2 id=\"2-安装Hexo\"><a href=\"#2-安装Hexo\" class=\"headerlink\" title=\"2.安装Hexo\"></a>2.安装Hexo</h2><p>在你喜欢的地方新建一个文件夹，在新建的文件夹路径上输入cmd，就会直接打开当前目录下的命令窗口</p>\n<p><img src=\"https://img-blog.csdnimg.cn/1b9f0e33991c4bbea1e1bd2bf212cdc8.png\" alt=\"img\"></p>\n<p>执行npm i hexo，这里我使用的是cnpm，奈何没有wifi只能用热点npm下载总是报错，如果也遇到npm下载不下来可以配置一下淘宝镜像cnpm</p>\n<p><img src=\"https://img-blog.csdnimg.cn/5be752c1b1704b27b16c1059ec0b1237.png\" alt=\"img\"></p>\n<p> 下载好了之后就会生成几个文件，这样就是下载成功了！</p>\n<p><img src=\"https://img-blog.csdnimg.cn/cdb9c92db74e4586a70ab57bcd8ecb62.png\" alt=\"img\"></p>\n<h2 id=\"3-配置hexo环境变量\"><a href=\"#3-配置hexo环境变量\" class=\"headerlink\" title=\"3.配置hexo环境变量\"></a>3.配置hexo环境变量</h2><p>第一次接触Hexo的朋友在执行hexo命令的时候会遇到命令不存在的问题，这个时候就需要去桌面右击我的电脑，点击属性就会出现以下弹窗，咱们点击高级系统设置，再点击环境变量</p>\n<p><img src=\"https://img-blog.csdnimg.cn/5e5352fe5b4d452faf76f6e6e1160b68.png\" alt=\"img\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/a531f4d22a754cea874b2248afae5195.png\" alt=\"img\"></p>\n<p>接着找到系统变量，找到path这一行，咱们双击</p>\n<p><img src=\"https://img-blog.csdnimg.cn/f29d6abfce4e498c86ce16488453aeba.png\" alt=\"img\"></p>\n<p>继续点击新建</p>\n<p><img src=\"https://img-blog.csdnimg.cn/9f9798c2035a469691d793fbdd986ecb.png\" alt=\"img\"></p>\n<p>到一步了之后，咱们先去打开之前下载hexo的那个文件夹，里面不是生成了node_modules文件夹吗，点进去找到hexo文件夹，点进去，再点bin文件夹，然后复制整个路径下来</p>\n<p><img src=\"https://img-blog.csdnimg.cn/0a7852b116494386b6ca06cf6fc8b11d.png\" alt=\"img\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/55ec39557bf84813b198da0920504dd4.png\" alt=\"img\"></p>\n<p>复制下来的路径咱们直接放到刚才点击新建的那个地方</p>\n<p><img src=\"https://img-blog.csdnimg.cn/6f26ed44bc884f89bbe070a6eea9deb2.png\" alt=\"img\"></p>\n<p><strong>注意：配置好了之后一定要点确定！</strong> </p>\n<p>到现在咱们的环境变量就配置好了，可以继续搭建咱们的博客了，大家不要急躁，马上了</p>\n<h2 id=\"4-完成本地搭建！\"><a href=\"#4-完成本地搭建！\" class=\"headerlink\" title=\"4.完成本地搭建！\"></a>4.完成本地搭建！</h2><p>回到咱们刚才下载hexo的文件夹下，咱们新建一个文件夹名字随便起，这个才是我们博客的文件夹，之前的文件夹只是为了给hexo配置环境变量！</p>\n<p><img src=\"https://img-blog.csdnimg.cn/43c38181328148c28c786790c1bb4f83.png\" alt=\"img\"></p>\n<p>打开新建的文件夹，右键执行git bash ，执行命令 hexo init 咱们进行初始化</p>\n<p><strong>注意：hexo init 只能在一个空的文件夹进行，否则会报错！</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2f7fbb0fa4af43b5ae990d6f273e8b34.png\" alt=\"img\"></p>\n<p>这个时候基础项目就生成好了</p>\n<p><img src=\"https://img-blog.csdnimg.cn/11013c7d539840079d1b0796c90e2077.png\" alt=\"img\"></p>\n<p>接着执行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cnpm i ；（下载包）\n\nhexo g 或者 hexo generate（生成静态页面）\n\nhexo server (运行本地服务)</code></pre>\n\n<p> 这个时候你如果环境变量配置都是安装我之前配置的，那么就没有任何问题</p>\n<p><img src=\"https://img-blog.csdnimg.cn/ed05d374aab34b208ffaf576edd88d71.png\" alt=\"img\"></p>\n<p> 这时候访问localhost:4000就可以看到咱们的hexo页面啦！</p>\n<p><img src=\"https://img-blog.csdnimg.cn/e49b9560f4b24a6d84189c2cbb389405.png\" alt=\"img\"></p>\n<h2 id=\"5-实现连接github仓库\"><a href=\"#5-实现连接github仓库\" class=\"headerlink\" title=\"5.实现连接github仓库\"></a>5.实现连接github仓库</h2><p>这一步是最关键的一步，可以让咱们的博客在远程服务器上部署！</p>\n<p>首先，需要有一个<strong>github账号</strong>。登上账号后建一个仓库：仓库名为你的用户名.github.io，<br>举例如下：<br>创建一个和你用户名相同的仓库，后面加.github.io，<br>只有这样，将来要部署到GitHub的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名.</p>\n<p><img src=\"https://img-blog.csdnimg.cn/5ef1d4caf5134290b091b132b5dfbe08.png\" alt=\"img\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/7df60fedb2ae4ea098e237ba2f48746f.png\" alt=\"img\"></p>\n<p>这一步完成了之后咱们就需要进行配置ssh公钥，这一步也很关键！</p>\n<p>打开C\\user\\你自己的电脑名\\文件下</p>\n<p>右键打开Git Bush 输入</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh-keygen -t rsa -C 3314806775@qq.com</code></pre>\n\n\n<p>改成你自己注册的github邮箱！！！</p>\n<p>接着你就会发现C\\user\\你自己的电脑名\\文件下多了一个.ssh文件夹，打开id_rsa.pub文件复制里面的内容，这就是咱们的公钥</p>\n<p><img src=\"https://img-blog.csdnimg.cn/6077ea638dc342f6ab3d59b75eff14b5.png\" alt=\"img\"></p>\n<p>紧接着在github的设置里，咱们去配置这个公钥（不然就会一直报错，没有权限，当时折腾了我很久），点击New Shh Key，title随便起，key里把复制的内容粘贴过去，这样咱们的公钥就配置好啦！</p>\n<p><img src=\"https://img-blog.csdnimg.cn/84fdbcb8ceea46b3a5ab29b2b02ad5ba.png\" alt=\"img\"></p>\n<p><strong>最后一步！！！</strong></p>\n<p>打开咱们hexo项目文件夹，打开_config.yml文件，直接滑到最下面找到deploy更改配置,这一步就是为了把hexo和github连接起来</p>\n<p><img src=\"https://img-blog.csdnimg.cn/79d1649f7a3b4e85b8ce555e90453885.png\" alt=\"img\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">deploy:\n  type: git\n  repo: git@github.com:TyyGod&#x2F;TyyGod.github.io.git\n  branch: main</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/87e410c1fc3e41adb26f7f02ffa367a7.png\" alt=\"img\"></p>\n<p>完成这一步，保存，咱们接着在这个文件夹下右键打开GirBush，执行 npm install hexo-deployer-git –save  这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/c095ff1a5b3c4180beb22af49b45f72b.png\" alt=\"img\"></p>\n<p>最后依次执行以下命令：</p>\n<p><strong>如果缩写没有命令直接执行全称就行</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hexo c     #清除缓存文件 db.json 和已生成的静态文件 public （hexoi clean）\nhexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)\nhexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</code></pre>\n\n<p>完成之后去github仓库中看一看</p>\n<p><img src=\"https://img-blog.csdnimg.cn/9b7b774380d84c2db3fac8cc9295a70c.png\" alt=\"img\"></p>\n<p><strong>这样就是成功了！！！</strong></p>\n<p> 把前面的名字改成你自己的github名就好，后面.github.io不变即可</p>\n<p><img src=\"https://img-blog.csdnimg.cn/fc90ef9f15bf49af9c9cbc7071e6bba2.png\" alt=\"img\"></p>\n<p><em>可能你们看到的页面跟我不一样，这是因为我在hexo的基础上添加了Aurhora风格</em></p>\n<h2 id=\"6-升级Hexo，变成Auroar-Hexo！！！\"><a href=\"#6-升级Hexo，变成Auroar-Hexo！！！\" class=\"headerlink\" title=\"6.升级Hexo，变成Auroar Hexo！！！\"></a>6.升级Hexo，变成Auroar Hexo！！！</h2><p>我只是为了项目样式更加好看，如果没有这方需求的朋友恭喜你们，你们已经完成搭建属于自己的博客了，至于想接着完善hexo的，那咱们继续，不过请放心，升级hexo相较于创建hexo非常简单</p>\n<h4 id=\"步骤-1-安装主题包\"><a href=\"#步骤-1-安装主题包\" class=\"headerlink\" title=\"步骤 1 - 安装主题包\"></a>步骤 1 - 安装主题包</h4><p>在控制台中，进入 Hexo 项目的根目录，然后运行以下命令安装主题</p>\n<p>注意</p>\n<p>对于版本 2.0+ 后，生成脚本全部移植到 hexo-plugin-aurora 包中。所以需要安装这个插件来使用这个主题!</p>\n<p>YARN<br>NPM<br>yarn add hexo-theme-aurora hexo-plugin-aurora</p>\n<h4 id=\"步骤-2-生成主题配置\"><a href=\"#步骤-2-生成主题配置\" class=\"headerlink\" title=\"步骤 2 - 生成主题配置\"></a>步骤 2 - 生成主题配置</h4><p>因为主题是使用 NPM 或者 Yarn 安装的，而不是 clone 到 themes 文件夹的。所以我们需要自己创建一个配置文件。你只需要在 Hexo 博客的根目录下创建一个 _config.aurora.yml 配置文件来配置主题。</p>\n<p>要获取默认主题模板，对于 Linux 系统 (MacOS&#x2F;LinuxOS) 用户只需执行以下命令。</p>\n<p>对于 Windows 用户，您可以将下面的模板复制到 _config.aurora.yml 中。</p>\n<p>Linux 复制模版命令</p>\n<p>cp -rf .&#x2F;node_modules&#x2F;hexo-theme-aurora&#x2F;_config.yml .&#x2F;_config.aurora.yml<br>也可以直接复制这个下面链接的模版到项目根目录的 _config.aurora.yml 中</p>\n<p><a href=\"https://github.com/auroral-ui/hexo-theme-aurora/blob/main/_config.yml\">https://github.com/auroral-ui/hexo-theme-aurora/blob/main/_config.yml</a></p>\n<h4 id=\"步骤-3-Settingtheme\"><a href=\"#步骤-3-Settingtheme\" class=\"headerlink\" title=\"步骤 3 - Settingtheme\"></a>步骤 3 - Settingtheme</h4><p>因为要告诉 hexo 你要用的主题是 aurora 所以需要把 _config.yml 中的 theme 值改为 aurora</p>\n<p>打开在 Hexo 根目录下的 _config.yml<br>修改把 theme 的值改为 aurora</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1. # Extensions\n2. ## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;\n3. ## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;\n4. theme: aurora</code></pre>\n\n\n\n<h4 id=\"步骤-4-设置permalink\"><a href=\"#步骤-4-设置permalink\" class=\"headerlink\" title=\"步骤 4 - 设置permalink\"></a>步骤 4 - 设置permalink</h4><p>因为使用了 Vue-router，Hexo 默认生成的页面和文章的 permalink 与我们 Vue router 中的 path 是不相符的，那么就会出现无法访问的问题。所以我们需要修改 Hexo 默认配置文件里面的 permalink 参数。</p>\n<p><strong>1.打开在 Hexo 根目录下的 _config.yml</strong><br><strong>2.修改 permalink 参数为 &#x2F;post&#x2F;:title.html</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># URL\n\n## Set your site url here. For example, if you use GitHub Page, set url as &#39;https:&#x2F;&#x2F;username.github.io&#x2F;project&#39;\n\nurl: https:&#x2F;&#x2F;tridiamond.tech\npermalink: &#x2F;post&#x2F;:title.html\npermalink_defaults:\npretty_urls:\n  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks\n  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</code></pre>\n\n<h4 id=\"步骤-5-设置代码高亮\"><a href=\"#步骤-5-设置代码高亮\" class=\"headerlink\" title=\"步骤 5 - 设置代码高亮\"></a>步骤 5 - 设置代码高亮</h4><p>最后主题是使用 Prismjs 来实现代码高亮显示，但 Hexo 默认是使用 highlightjs，因此你需要更改 Hexo 配置来使用 Prismjs:</p>\n<p>把 highlight 的启用改为false<br>把 prismjs 的启用改为true<br>把 prismjs 下的 preprocess 改为 false</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">highlight:\n  enable: false\n  line_number: true\n  auto_detect: false\n  tab_replace: &#39;&#39;\n  wrap: true\n  hljs: false\nprismjs:\n  enable: true\n  preprocess: false\n  line_number: true\n  tab_replace: &#39;&#39;</code></pre>\n\n<h4 id=\"步骤-6-创建-“关于-about-”-页面\"><a href=\"#步骤-6-创建-“关于-about-”-页面\" class=\"headerlink\" title=\"步骤 6 - 创建 “关于 (about)” 页面\"></a>步骤 6 - 创建 “关于 (about)” 页面</h4><p>主题默认开启了 about 页面，所以我们需要创建这个 about 页，要不主题就无法正常显示 about 页。</p>\n<p>#步骤 6 - 创建 “关于 (about)” 页面<br>主题默认开启了 about 页面，所以我们需要创建这个 about 页，要不主题就无法正常显示 about 页。</p>\n<p>要创建这个默认的 about 页，只需要执行这个 Hexo 的命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hexo new page about</code></pre>\n\n\n<p>执行完毕后，你会发现在 source&#x2F; 文件中多处了一个新的文件夹：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">.\n└── source\n    └── about\n        └── index.md</code></pre>\n\n\n<p>你可以随意修改这个 index.md markdown 文件中的内容，此文件的内容将会现在在我们的 about 页面中。</p>\n<h4 id=\"步骤-7-重新生成与本地服务器\"><a href=\"#步骤-7-重新生成与本地服务器\" class=\"headerlink\" title=\"步骤 7 - 重新生成与本地服务器\"></a>步骤 7 - 重新生成与本地服务器</h4><p><strong>使用以下命令来运行本地环境。</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hexo clean &amp; hexo g &amp; hexo server</code></pre>\n\n\n<p>提示</p>\n<p>改变了任何配置都需要重新生成 Hexo 的静态文件！</p>\n<p>当文件都生成完毕之后，就可以通过 <a href=\"https://localhost:4000在新窗口打开\">https://localhost:4000在新窗口打开</a> 访问你的博客了。</p>\n<p>最后在在执行一下hexo deploy从新部署一下，就完成啦，升级hexo到服务端需要一点时间，如果发现页面没有变化的重启几次服务试一下</p>\n<p>最终的效果！</p>\n<p><img src=\"C:\\Users\\HP\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230906162640971.png\" alt=\"image-20230906162640971\"></p>\n<p>最后感谢能看到这里的人，如果遇到了任何问题，可以直接评论我会第一时间回复的！</p>\n","feature":true,"text":"1.下载git和node搭建之前需要准备的软件：Git：官网下载：https://git-scm.com/Node.js 官网下载：http://nodejs....","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"技术","slug":"技术","count":4,"path":"api/categories/技术.json"}],"tags":[{"name":"技术","slug":"技术","count":1,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E4%B8%8B%E8%BD%BDgit%E5%92%8Cnode\"><span class=\"toc-text\">1.下载git和node</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%AE%89%E8%A3%85Hexo\"><span class=\"toc-text\">2.安装Hexo</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E9%85%8D%E7%BD%AEhexo%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">3.配置hexo环境变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%AE%8C%E6%88%90%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%EF%BC%81\"><span class=\"toc-text\">4.完成本地搭建！</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%AE%9E%E7%8E%B0%E8%BF%9E%E6%8E%A5github%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">5.实现连接github仓库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E5%8D%87%E7%BA%A7Hexo%EF%BC%8C%E5%8F%98%E6%88%90Auroar-Hexo%EF%BC%81%EF%BC%81%EF%BC%81\"><span class=\"toc-text\">6.升级Hexo，变成Auroar Hexo！！！</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-1-%E5%AE%89%E8%A3%85%E4%B8%BB%E9%A2%98%E5%8C%85\"><span class=\"toc-text\">步骤 1 - 安装主题包</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-2-%E7%94%9F%E6%88%90%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">步骤 2 - 生成主题配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-3-Settingtheme\"><span class=\"toc-text\">步骤 3 - Settingtheme</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-4-%E8%AE%BE%E7%BD%AEpermalink\"><span class=\"toc-text\">步骤 4 - 设置permalink</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-5-%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE\"><span class=\"toc-text\">步骤 5 - 设置代码高亮</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-6-%E5%88%9B%E5%BB%BA-%E2%80%9C%E5%85%B3%E4%BA%8E-about-%E2%80%9D-%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">步骤 6 - 创建 “关于 (about)” 页面</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4-7-%E9%87%8D%E6%96%B0%E7%94%9F%E6%88%90%E4%B8%8E%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">步骤 7 - 重新生成与本地服务器</span></a></li></ol></li></ol></li></ol>","author":{"name":"假面骑士投","slug":"blog-author","avatar":"https://img2.baidu.com/it/u=784587947,3577862210&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500","link":"/","description":"一个路过的假面骑士罢了","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"欢迎来到Tyy的个人博客！","uid":"4d0d662b78ac35b6510e9a9f36ef1ff9","slug":"我爱牛微微","date":"2023-08-25T10:53:51.000Z","updated":"2023-09-06T08:42:56.544Z","comments":true,"path":"api/articles/我爱牛微微.json","keywords":null,"cover":"/medias/14.png","text":"欢迎来到田远野的个人博客，我爱牛微微！ ","link":"","photos":[],"count_time":{"symbolsCount":20,"symbolsTime":"1 mins."},"categories":[{"name":"情感","slug":"情感","count":1,"path":"api/categories/情感.json"}],"tags":[{"name":"情感","slug":"情感","count":1,"path":"api/tags/情感.json"}],"author":{"name":"假面骑士投","slug":"blog-author","avatar":"https://img2.baidu.com/it/u=784587947,3577862210&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500","link":"/","description":"一个路过的假面骑士罢了","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"减脂指南","uid":"4a088409b555ba0e65cf89101348b139","slug":"减脂科普","date":"2022-11-25T10:53:51.000Z","updated":"2023-09-06T08:43:06.799Z","comments":true,"path":"api/articles/减脂科普.json","keywords":null,"cover":"/medias/8.png","text":"减脂科普 1.在减脂人眼中食物的分类​ 在讲如何减脂之前，我们首先就需要了解各种食物的热量以及各种食物代表了什么。 ​ 我把食物分成了三大类 在我眼中食物只有三...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"生活","slug":"生活","count":1,"path":"api/categories/生活.json"}],"tags":[],"author":{"name":"假面骑士投","slug":"blog-author","avatar":"https://img2.baidu.com/it/u=784587947,3577862210&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500","link":"/","description":"一个路过的假面骑士罢了","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}